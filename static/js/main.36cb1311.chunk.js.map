{"version":3,"sources":["Components/Administrator/styles.module.css","Components/Identification/styles.module.css","Components/Exchanger/styles.module.css","Components/Checkout/styles.module.css","Components/History/styles.module.css","logo.svg","Components/Identification/Identification.js","Components/Exchanger/Exchanger.js","Components/Checkout/Checkout.js","Components/History/History.js","Components/Administrator/Administrator.js","App.js","reportWebVitals.js","helper.js","middlewares.js","store.js","index.js"],"names":["module","exports","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","useStylesLabel","root","color","fontSize","Identification","dispatch","useDispatch","classes","classesLabel","React","useState","modalStyle","open","setOpen","handleClose","setFormGroup","refForm","useRef","useEffect","current","setInputGroup","ref","body","style","className","id","action","method","styles","modal","onSubmit","e","undefined","preventDefault","type","query","name","childNodes","value","surname","patronymic","textFieldContainer","MuiInputLabel","InputLabel","required","shrink","htmlFor","Input","textField","buttonContainer","Button","saveButton","form","Modal","disableBackdropClick","disableEscapeKeyDown","onClose","aria-labelledby","aria-describedby","formControl","margin","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","button","currencies","sort","Exchanger","openHistory","setOpenHistory","setOpenCheckout","openCheckout","rates","useSelector","state","maxValue","systemRates","today","sellingCurrency","setSellingCurrency","buyingCurrency","setBuyingCurrency","currency","setCurrency","currencyValue","setCurrencyValue","setInfo","refInfo","container","dropdownContainer","Select","inputProps","select","native","defaultValue","onChange","event","target","map","checked","TextField","label","min","InputLabelProps","variant","screen","toFixed","size","startIcon","AttachMoney","onClick","buyingValue","History","height","Checkout","checkoutInfo","history","length","date","Date","toISOString","slice","element","document","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","location","reload","getHistory","historyArray","JSON","parse","localStorage","getItem","historyIndex","findIndex","elem","trim","toLowerCase","res","forEach","push","console","log","el","Administrator","systemRatesArr","Object","getOwnPropertyNames","openDate","setOpenDate","handleCloseDate","dateValue","setDateValue","openRates","setOpenRates","handleCloseRates","ratesValue","setRatesValue","setRates","parseInt","bodyDate","noValidate","bodyRates","selectContainer","Assessment","parseFloat","buttonContainerInner","DateRange","App","isAdmin","AccountBalance","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dateDiffInDays","a","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","SUCCESS","FAILURE","ADD_DATA","INIT","FETCH_CHANGE_MAX","FETCH_CHANGE_DATE","FETCH_CHANGE_RATES","maxValueStorage","todayStorage","sessionStorage","d","curr_date","curr_month","getToday","systemRatesObject","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","USD","ZAR","assign","videoState","sellCurrency","buyCurrency","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","alert","applyMiddleware","next","fetch","response","json","data","base","err","getState","setItem","stringify","i","Number","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.36cb1311.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__gW8ij\",\"identification\":\"styles_identification__39OnG\",\"MuiInputLabel\":\"styles_MuiInputLabel__2JlaN\",\"Muifocused\":\"styles_Muifocused__YIVog\",\"textFieldContainer\":\"styles_textFieldContainer__1j1ZI\",\"dropdownContainer\":\"styles_dropdownContainer__h4XKv\",\"selectContainer\":\"styles_selectContainer__2syly\",\"buttonContainer\":\"styles_buttonContainer__3CAGJ\",\"buttonContainerInner\":\"styles_buttonContainerInner__286ON\",\"button\":\"styles_button__1_H_s\",\"buttonContainer-inner\":\"styles_buttonContainer-inner__1kv2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2dvXb\",\"identification\":\"styles_identification__EzX_t\",\"MuiInputLabel\":\"styles_MuiInputLabel__BOe4p\",\"Muifocused\":\"styles_Muifocused__3L780\",\"textFieldContainer\":\"styles_textFieldContainer__32aDS\",\"textField\":\"styles_textField__2F-cj\",\"buttonContainer\":\"styles_buttonContainer__2R_ke\",\"saveButton\":\"styles_saveButton__3ieVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1I-s3\",\"dropdownContainer\":\"styles_dropdownContainer__2nf-m\",\"select\":\"styles_select__Z1aeG\",\"screen\":\"styles_screen__3tdmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__23PXI\",\"identification\":\"styles_identification__3n-pF\",\"MuiInputLabel\":\"styles_MuiInputLabel__2oA0F\",\"Muifocused\":\"styles_Muifocused__1Q7L6\",\"textFieldContainer\":\"styles_textFieldContainer__1KnII\",\"textField\":\"styles_textField__rqbvz\",\"buttonContainer\":\"styles_buttonContainer__phWs-\",\"saveButton\":\"styles_saveButton__E-Mhu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2Zykn\",\"identification\":\"styles_identification__2dnpL\",\"MuiInputLabel\":\"styles_MuiInputLabel__E7deG\",\"Muifocused\":\"styles_Muifocused__3cX99\",\"textFieldContainer\":\"styles_textFieldContainer__2Dxec\",\"textField\":\"styles_textField__ckaWb\",\"buttonContainer\":\"styles_buttonContainer__18ZQB\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {\r\n    useState, useEffect, useRef,\r\n} from 'react';\r\nimport { FormControl, RadioGroup, FormControlLabel, InputLabel, Input, Button } from '@material-ui/core';\r\nimport styles from './styles.module.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { useSelector, useDispatch, useStore } from 'react-redux'\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 700,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\nconst useStylesLabel = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        color: \"black!important\",\r\n        fontSize: `20px`,\r\n        transform: \"none\",\r\n    },\r\n});\r\n\r\nexport function Identification() { \r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles(); const classesLabel = useStylesLabel();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [formGroup, setFormGroup] = useState(0);\r\n    const refForm = useRef(null);\r\n    useEffect(() => {\r\n        setFormGroup(refForm.current);\r\n    }, [refForm.current]);\r\n\r\n    const [InputGroup, setInputGroup] = useState(0);\r\n    const ref = useRef(null);\r\n    useEffect(() => {\r\n        setInputGroup(ref.current);\r\n    }, [ref.current]);\r\n    const body = (\r\n\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <form ref={refForm} id=\"my-form-id\" action=\"/\" method=\"POST\" className={styles.modal}\r\n                onSubmit={(e) => {\r\n                    if (e != undefined) {\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    dispatch({ type: 'FETCH', query: \"AUD\" });\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        name: `${ref.current.childNodes[1].childNodes[1].childNodes[0].value}`,\r\n                        surname: `${ref.current.childNodes[0].childNodes[1].childNodes[0].value}`,\r\n                        patronymic: `${ref.current.childNodes[2].childNodes[1].childNodes[0].value}`\r\n                    });  \r\n                    dispatch({\r\n                        type: 'FETCH_INIT',\r\n                        name: `${ref.current.childNodes[1].childNodes[1].childNodes[0].value}`,\r\n                        surname: `${ref.current.childNodes[0].childNodes[1].childNodes[0].value}`,\r\n                        patronymic: `${ref.current.childNodes[2].childNodes[1].childNodes[0].value}`\r\n                    });                                        \r\n                    handleClose();\r\n                }}\r\n            >\r\n\r\n                <div ref={ref} className={styles.textFieldContainer}>\r\n                    <div className={styles.MuiInputLabel}>\r\n                        <InputLabel classes={classesLabel} required shrink={false} htmlFor=\"my-input-1\">Введите фамилию:</InputLabel>\r\n                        <Input\r\n                            name=\"my-input-1\" className={styles.textField} required id=\"my-input-1\" />\r\n\r\n                    </div>\r\n                    <div className={styles.MuiInputLabel}>\r\n                        <InputLabel classes={classesLabel} required shrink={false} htmlFor=\"my-input-2\">Введите имя:</InputLabel>\r\n                        <Input\r\n                            name=\"my-input-2\" className={styles.textField} required id=\"my-input-2\" />\r\n\r\n                    </div>\r\n                    <div className={styles.MuiInputLabel}>\r\n                        <InputLabel classes={classesLabel} required shrink={false} htmlFor=\"my-input-3\">Введите отчество:</InputLabel>\r\n                        <Input\r\n                            name=\"my-input-3\" className={styles.textField} required id=\"my-input-3\" />\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className={styles.buttonContainer}>\r\n                <Button className={styles.saveButton} type=\"submit\" form=\"my-form-id\">Enter</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n    return (\r\n        <div>\r\n            <Modal\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {\r\n    useState, useEffect, useRef,\r\n} from 'react';\r\nimport { FormControl, RadioGroup, FormControlLabel, InputLabel, Input, Button, Select, TextField } from '@material-ui/core';\r\nimport styles from './styles.module.css';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useSelector, useDispatch, useStore } from 'react-redux'\r\nimport { AttachMoney, AccountBalance, History } from '@material-ui/icons';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: \"auto\",\r\n        minWidth: \"400px\",\r\n        maxWidth: \"500px\",\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 20,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(30),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MenuPropsSelling = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: `${10 * 5.5 + 12}`,\r\n            width: \"250\",\r\n        },\r\n    },\r\n    id: 'select-selling',\r\n\r\n};\r\nconst MenuPropsBuying = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: `${10 * 5.5 + 12}`,\r\n            width: \"250\",\r\n        },\r\n    },\r\n    id: 'select-buying',\r\n\r\n};\r\nconst MenuPropsCurrency = {\r\n    InputProps: {\r\n        style: {\r\n            maxHeight: `${10 * 5.5 + 12}`,\r\n            width: \"500\",\r\n        },\r\n    },\r\n    id: 'select-currency',\r\n\r\n};\r\nconst currencies = [\"CAD\", \"HKD\", \"ISK\", \"PHP\", \"DKK\", \"HUF\", \"CZK\", \"GBP\", \"RON\", \"SEK\", \"IDR\", \"INR\", \"BRL\", \"RUB\", \"HRK\", \"JPY\", \"THB\", \"CHF\", \"EUR\", \"MYR\", \"BGN\", \"TRY\", \"CNY\", \"NOK\", \"NZD\", \"ZAR\", \"USD\", \"MXN\", \"SGD\", \"AUD\", \"ILS\", \"KRW\", \"PLN\"]\r\n    .sort();\r\n\r\nexport function Exchanger({ openHistory, setOpenHistory, openCheckout, setOpenCheckout }) {\r\n    let rates = useSelector(state => state.rates);\r\n    let maxValue = useSelector(state => state.maxValue);\r\n    let today = useSelector(state => state.today);\r\n    let systemRates = useSelector(state => state.systemRates);\r\n    let name = useSelector(state => state.name);\r\n    let surname = useSelector(state => state.surname);\r\n    let patronymic = useSelector(state => state.patronymic);\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const [sellingCurrency, setSellingCurrency] = useState(currencies[0]);\r\n    const handleChangeSell = (event) => {\r\n        setSellingCurrency(event.target.value);\r\n        dispatch({ type: 'FETCH', query: event.target.value });\r\n\r\n\r\n    };\r\n\r\n    const [buyingCurrency, setBuyingCurrency] = useState(currencies[0]);\r\n    const handleChangeBuy = (event) => {\r\n        setBuyingCurrency(event.target.value);\r\n\r\n\r\n    };\r\n\r\n    const [currency, setCurrency] = useState(1);\r\n    const handleChangeCurrency = (event) => {\r\n        setCurrency(event.target.value);\r\n        if (!event) {\r\n            setCurrency(rates[buyingCurrency]);\r\n        }\r\n    };\r\n\r\n    const [currencyValue, setCurrencyValue] = useState(0);\r\n    const handleChangeCurrencyValue = (event) => {\r\n        if (event.target.value < 0) { setCurrencyValue(0); return }\r\n\r\n        if (event.target.value > maxValue) { setCurrencyValue(maxValue); return }\r\n        else setCurrencyValue(event.target.value);\r\n    };\r\n\r\n\r\n    const [info, setInfo] = useState(0);\r\n    const refInfo = useRef(null);\r\n    useEffect(() => {\r\n        setInfo(refInfo.current);\r\n\r\n    }, [refInfo.current]);\r\n    useEffect(() => {\r\n        setCurrency(refInfo.current.childNodes[0].value);\r\n    });\r\n\r\n\r\n    const handleExchange = (event) => {\r\n        dispatch({\r\n            type: \"FETCH_MORE\",\r\n            buyingCurrency: buyingCurrency,\r\n            sellingCurrency: sellingCurrency,\r\n            value: currencyValue,\r\n            buyingValue: (currencyValue * currency).toFixed(2),\r\n            currency: currency,\r\n            name: name,\r\n            surname: surname,\r\n            patronymic: patronymic\r\n        });\r\n\r\n        setOpenCheckout(true)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <form className={classes.formControl}>\r\n                <div className={styles.dropdownContainer}>\r\n                    <InputLabel shrink htmlFor=\"select-selling\" >\r\n                        Выберите продаваемую валюту:\r\n        </InputLabel>\r\n                    <Select\r\n                        inputProps={{ id: 'select-selling', className: styles.select }}\r\n                        native\r\n                        value={sellingCurrency}\r\n                        defaultValue={currencies[0]}\r\n                        onChange={handleChangeSell}\r\n                    >\r\n                        {currencies.map((name) => (\r\n                            <option key={name} value={name}>\r\n                                {name}\r\n                            </option>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n                <div className={styles.dropdownContainer}>\r\n                    <InputLabel shrink htmlFor=\"select-buying\">\r\n                        Выберите покупаемую валюту:\r\n        </InputLabel>\r\n                    <Select\r\n                        inputProps={{ id: 'select-buying', className: styles.select }}\r\n                        native\r\n                        value={buyingCurrency}\r\n                        defaultValue={currencies[0]}\r\n                        onChange={handleChangeBuy}\r\n                    >\r\n                        {currencies.map((name) => (\r\n                            <option key={name} value={name}>\r\n                                {name}\r\n                            </option>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n                <div className={styles.dropdownContainer}>\r\n                    <InputLabel shrink htmlFor=\"select-currency\">\r\n                        Выберите курс:\r\n        </InputLabel>\r\n                    <Select\r\n                        inputProps={{ id: 'select-currency', className: styles.select }}\r\n                        native\r\n                        value={currency}\r\n                        defaultValue={rates[buyingCurrency]}\r\n                        ref={refInfo}\r\n                        onChange={(event) => {\r\n                            event.preventDefault();\r\n                            //setCurrency(rates[buyingCurrency]);\r\n                            setCurrency(event.target.value);\r\n                        }}                    >\r\n\r\n                        <option checked value={rates[buyingCurrency]}>\r\n                            {rates[buyingCurrency]} (курс банка)\r\n                        </option>\r\n                        <option value={systemRates[buyingCurrency]}>\r\n                            {systemRates[buyingCurrency]} (курс системы)\r\n                        </option>\r\n\r\n                    </Select>\r\n                </div>\r\n                <div className={styles.dropdownContainer}>\r\n                    <TextField\r\n                        id=\"standard-number\"\r\n                        label=\"How much do you want to trade?\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={handleChangeCurrencyValue}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={currencyValue}\r\n                    />\r\n                </div>\r\n            </form>\r\n            <div className={styles.screen}>\r\n                <p>You are selling {sellingCurrency} currency</p>\r\n                <p>You are buying {buyingCurrency} currency</p>\r\n                <p>Currently, you are selling to bank {currencyValue} {sellingCurrency} </p>\r\n                <p>You will receive {(currencyValue * currency).toFixed(2)} {buyingCurrency} </p>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={classes.button}\r\n                    startIcon={<AttachMoney />}\r\n                    style={{ backgroundColor: \"rgb(44, 76, 255)\", color: \"white\" }}\r\n                    onClick={handleExchange}\r\n                >\r\n                    Exchange\r\n      </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={classes.button}\r\n                    startIcon={<History />}\r\n                    style={{ backgroundColor: \"rgb(44, 76, 255)\", color: \"white\" }}\r\n                    onClick={() => { setOpenHistory(true) }}\r\n                >\r\n                    Show history\r\n      </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {\r\n    useState, useEffect, useRef,\r\n} from 'react';\r\nimport { FormControl, RadioGroup, FormControlLabel, InputLabel, Input, Button } from '@material-ui/core';\r\nimport styles from './styles.module.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { useSelector, useDispatch, useStore } from 'react-redux'\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        maxWidth: 1100,\r\n        height: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\nconst useStylesLabel = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        color: \"black!important\",\r\n        fontSize: `20px`,\r\n        transform: \"none\",\r\n    },\r\n});\r\n\r\nexport function Checkout({ openCheckout, setOpenCheckout }) {\r\n    let checkoutInfo = useSelector(state => state.history[state.history.length - 1]);\r\n    let name = useSelector(state => state.name);\r\n    let surname = useSelector(state => state.surname);\r\n    let patronymic = useSelector(state => state.patronymic);\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles(); const classesLabel = useStylesLabel();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(openCheckout);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenCheckout(false);\r\n    };\r\n\r\n    const [formGroup, setFormGroup] = useState(0);\r\n    const refForm = useRef(null);\r\n    useEffect(() => {\r\n        setFormGroup(refForm.current);\r\n    }, [refForm.current]);\r\n\r\n    const [InputGroup, setInputGroup] = useState(0);\r\n    const ref = useRef(null);\r\n    useEffect(() => {\r\n        setInputGroup(ref.current);\r\n    }, [ref.current]);\r\n    const body = (\r\n\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <div ref={ref} className={styles.textFieldContainer}>\r\n                <p>Check</p>\r\n                <p>Date: {checkoutInfo ? checkoutInfo.date : `${new Date().toISOString().slice(0, 10)}`}</p>\r\n                <p>Client: {(name && patronymic && surname) ? surname + \" \" + name + \" \" + patronymic : \"User\"}</p>\r\n                <p>Bank bought: {checkoutInfo ? checkoutInfo.buyingValue + \" \" + checkoutInfo.buyingCurrency : \"100 RUB\"}</p>\r\n                <p>Bank sold: {checkoutInfo ? checkoutInfo.value + \" \" + checkoutInfo.sellingCurrency : \"100 USD\"}</p>\r\n            </div>\r\n            <div className={styles.buttonContainer}>\r\n                <Button className={styles.saveButton} onClick={() => {\r\n                    const element = document.createElement(\"a\");\r\n                    const file = new Blob([\r\n                        ` Check\\n`+\r\n                        ` Date:${new Date().toISOString().slice(0, 10)}\\n`+\r\n                    ` Client: ${surname} ${name} ${patronymic}\\n`+\r\n                    ` Bank bought:: ${checkoutInfo.buyingValue} ${checkoutInfo.buyingCurrency}\\n`+\r\n                    ` Bank sold: ${checkoutInfo.value} ${checkoutInfo.sellingCurrency}\\n`\r\n                    ], { type: 'text/plain' });\r\n                    element.href = URL.createObjectURL(file);\r\n                    element.download = \"myFile.txt\";\r\n                    document.body.appendChild(element); \r\n                    element.click();\r\n                    handleClose();\r\n                    document.location.reload();\r\n                }}>Save</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n    return (\r\n        <div>\r\n            <Modal\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={openCheckout}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {\r\n    useState, useEffect, useRef,\r\n} from 'react';\r\nimport { FormControl, RadioGroup, FormControlLabel, InputLabel, Input, Button } from '@material-ui/core';\r\nimport styles from './styles.module.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { useSelector, useDispatch, useStore } from 'react-redux'\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nfunction getHistory(name, surname, patronymic) {\r\n    let historyArray = JSON.parse(localStorage.getItem(\"history\"));\r\n    if (!historyArray) historyArray = [];\r\n    const historyIndex = historyArray.findIndex((elem) => { return (elem.name === name && elem.surname === surname && elem.patronymic === patronymic) })\r\n    if (name.trim().toLowerCase() === 'admin'\r\n        && surname.trim().toLowerCase() === 'admin'\r\n        && patronymic.trim().toLowerCase() === 'admin') {\r\n        let res = [];\r\n\r\n        historyArray.forEach((elem) => res.push({\r\n            name: elem.name,\r\n            surname: elem.surname,\r\n            patronymic: elem.patronymic,\r\n            history: elem.history\r\n        }));\r\n        console.log(res);\r\n        return res;\r\n    }\r\n    if (historyIndex === -1) {\r\n        return [{\r\n            name: name,\r\n            surname: surname,\r\n            patronymic: patronymic,\r\n            history: []\r\n        }];\r\n    }\r\n    return [{\r\n        name: name,\r\n        surname: surname,\r\n        patronymic: patronymic,\r\n        history: historyArray[historyIndex].history\r\n    }];\r\n\r\n\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        maxWidth: 1100,\r\n        height: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\nconst useStylesLabel = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        color: \"black!important\",\r\n        fontSize: `20px`,\r\n        transform: \"none\",\r\n    },\r\n});\r\n\r\nexport function History({ openHistory, setOpenHistory }) {\r\n    let name = useSelector(state => state.name);\r\n    let surname = useSelector(state => state.surname);\r\n    let patronymic = useSelector(state => state.patronymic);\r\n    const classes = useStyles(); const classesLabel = useStylesLabel();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(openHistory);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenHistory(false);\r\n    };\r\n\r\n    const [formGroup, setFormGroup] = useState(0);\r\n    const refForm = useRef(null);\r\n    useEffect(() => {\r\n        setFormGroup(refForm.current);\r\n    }, [refForm.current]);\r\n\r\n    const [InputGroup, setInputGroup] = useState(0);\r\n    const ref = useRef(null);\r\n    useEffect(() => {\r\n        setInputGroup(ref.current);\r\n    }, [ref.current]);\r\n    const body = (\r\n\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <div className={styles.buttonContainer}>\r\n                History of changes \r\n            </div>\r\n            <div ref={ref} className={styles.textFieldContainer}>\r\n\r\n                {getHistory(name, surname, patronymic).map((elem) => (\r\n                    elem.history.map((el) => (\r\n                        <div className={styles.textField}>\r\n                            <p>Client: {(elem.name && elem.patronymic && elem.surname) ? elem.surname + \" \" + elem.name + \" \" + elem.patronymic : \"User\"}</p>\r\n                            <p>Date: {el.date ? el.date : `${new Date().toISOString().slice(0, 10)}`}</p>\r\n                            <p>Bank sold: {el.buyingValue ? el.buyingValue + \" \" + el.buyingCurrency : \"100 RUB\"}</p>\r\n                            <p>Bank bought: {el.value ? el.value + \" \" + el.sellingCurrency : \"100 USD\"}</p>\r\n\r\n                        </div>\r\n                    ))))}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={openHistory}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {\r\n    useState, useEffect, useRef,\r\n} from 'react';\r\nimport { FormControl, RadioGroup, FormControlLabel, InputLabel, Input, Button, Select } from '@material-ui/core';\r\nimport styles from './styles.module.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal, TextField } from '@material-ui/core';\r\nimport { useSelector, useDispatch, useStore } from 'react-redux';\r\nimport { AttachMoney, AccountBalance, History, DateRange, Assessment } from '@material-ui/icons';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        maxWidth: 1100,\r\n        height: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n\r\nexport function Administrator({ openHistory, setOpenHistory }) {\r\n    let maxValue = useSelector(state => state.maxValue);\r\n    let today = useSelector(state => state.today);\r\n    let systemRates = useSelector(state => state.systemRates);\r\n    let systemRatesArr = Object.getOwnPropertyNames(systemRates);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const [currencyValue, setCurrencyValue] = useState(maxValue);\r\n    const handleChangeCurrencyValue = (event) => {\r\n        if (event.target.value < 0) { setCurrencyValue(0); return }\r\n        else setCurrencyValue(event.target.value);\r\n    };\r\n    const changeMaxValue = () => {\r\n        console.log(parseInt(currencyValue));\r\n        dispatch({\r\n            type: 'CHANGE_MAX',\r\n            maxValue: parseInt(currencyValue),\r\n        });\r\n        handleClose();\r\n    };\r\n\r\n\r\n    const [openDate, setOpenDate] = useState(false);\r\n    const handleOpenDate = () => {\r\n        setOpenDate(true);\r\n    };\r\n    const handleCloseDate = () => {\r\n        setOpenDate(false);\r\n    };\r\n    const [dateValue, setDateValue] = useState(today);\r\n    const handleChangeDateValue = (event) => {\r\n        setDateValue(event.target.value);\r\n    };\r\n    const changeDate = () => {\r\n        console.log(dateValue);\r\n        dispatch({\r\n            type: 'CHANGE_DATE',\r\n            today: dateValue,\r\n        });\r\n        handleCloseDate();\r\n    };\r\n\r\n    const [openRates, setOpenRates] = useState(false);\r\n    const handleOpenRates = () => {\r\n        setOpenRates(true);\r\n    };\r\n    const handleCloseRates = () => {\r\n        setOpenRates(false);\r\n    };\r\n    const [ratesValue, setRatesValue] = useState(systemRatesArr[0]);\r\n\r\n    const [rates, setRates] = useState(systemRates[systemRatesArr[0]]);\r\n    const handleChangeRatesValue = (event) => {\r\n        setRatesValue(event.target.value);\r\n\r\n\r\n    };\r\n    useEffect(() => {\r\n        setRates(systemRates[ratesValue]);\r\n    }, [ratesValue]);\r\n    const handleChangeRates = (event) => {\r\n        setRates(event.target.value);\r\n    };\r\n    const changeRates = () => {\r\n        systemRates[ratesValue] = parseFloat(rates);\r\n        console.log(systemRates);\r\n        dispatch({\r\n            type: 'CHANGE_RATES',\r\n            systemRates: systemRates,\r\n        });\r\n        handleCloseRates();\r\n    };\r\n\r\n    const body = (\r\n\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <div className={styles.dropdownContainer}>\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label=\"Max value\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    onChange={handleChangeCurrencyValue}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    value={currencyValue}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={styles.button}\r\n                    startIcon={<AttachMoney />}\r\n                    style={{ backgroundColor: \"rgb(44, 76, 255)\", color: \"white\", marginTop: \"50px\" }}\r\n                    onClick={changeMaxValue}\r\n                >\r\n                    Change max value\r\n      </Button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    const bodyDate = (\r\n\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <div className={styles.dropdownContainer}>\r\n                <form className={classes.container} noValidate>\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Pick a date\"\r\n                        type=\"date\"\r\n                        value={dateValue}\r\n                        className={classes.textField}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={handleChangeDateValue}\r\n                    />\r\n                </form>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={styles.button}\r\n                    startIcon={<AttachMoney />}\r\n                    style={{ backgroundColor: \"rgb(44, 76, 255)\", color: \"white\", marginTop: \"50px\" }}\r\n                    onClick={changeDate}\r\n                >\r\n                    Change today's date\r\n      </Button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    const bodyRates = (\r\n\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <div className={styles.dropdownContainer}>\r\n                <form className={classes.container} noValidate>\r\n                    <div className={styles.selectContainer}>\r\n                        <Select\r\n                            inputProps={{ id: 'select-buying', className: styles.select }}\r\n                            native\r\n                            value={ratesValue}\r\n                            defaultValue={systemRatesArr[0]}\r\n                            onChange={handleChangeRatesValue}\r\n                        >\r\n                            {systemRatesArr.map((name) => (\r\n                                <option key={name} value={name}>\r\n                                    {name}\r\n                                </option>\r\n                            ))}\r\n                        </Select>\r\n                        <TextField\r\n                            id=\"outlined-number\"\r\n                            label=\"Currency rate\"\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            onChange={handleChangeRates}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            value={rates}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={styles.button}\r\n                    startIcon={<Assessment />}\r\n                    style={{ backgroundColor: \"rgb(44, 76, 255)\", color: \"white\", marginTop: \"50px\" }}\r\n                    onClick={changeRates}\r\n                >\r\n                    Change system rates\r\n      </Button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={styles.buttonContainer}>\r\n            <div className={styles.buttonContainerInner}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={styles.button}\r\n                    startIcon={<History />}\r\n                    style={{ backgroundColor: \"rgb(44, 76, 255)\", color: \"white\" }}\r\n                    onClick={() => { setOpenHistory(true) }}\r\n                >\r\n                    Show history\r\n      </Button>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={styles.button}\r\n                    startIcon={<AttachMoney />}\r\n                    style={{ backgroundColor: \"rgb(44, 76, 255)\", color: \"white\" }}\r\n                    onClick={handleOpen}\r\n                >\r\n                    Change max value\r\n      </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={styles.button}\r\n                    startIcon={<DateRange />}\r\n                    style={{ backgroundColor: \"rgb(44, 76, 255)\", color: \"white\" }}\r\n                    onClick={handleOpenDate}\r\n                >\r\n                    Change today's date\r\n      </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={styles.button}\r\n                    startIcon={<Assessment />}\r\n                    style={{ backgroundColor: \"rgb(44, 76, 255)\", color: \"white\" }}\r\n                    onClick={handleOpenRates}\r\n                >\r\n                    Change system rates\r\n      </Button>\r\n            </div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n            <Modal\r\n                open={openDate}\r\n                onClose={handleCloseDate}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {bodyDate}\r\n            </Modal>\r\n            <Modal\r\n                open={openRates}\r\n                onClose={handleCloseRates}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {bodyRates}\r\n            </Modal>\r\n        </div >\r\n    );\r\n}","import logo from './logo.svg';\nimport React, {\n  useState, useEffect, useRef,\n} from 'react';\nimport './App.css';\nimport { Identification, Exchanger, Checkout, History, Administrator } from \"./Components\"\nimport { AttachMoney, AccountBalance } from '@material-ui/icons';\nimport { useSelector, useDispatch, useStore } from 'react-redux';\nfunction App() {\n  const [user, setUser] = useState({});\n  const [openCheckout, setOpenCheckout] = useState(false);\n  const [openHistory, setOpenHistory] = useState(false);\n  let isAdmin = useSelector(state => state.isAdmin);\n  return (\n    <div >\n      <header><div className=\"container\"> <h2>Currency exchanger   <AccountBalance style={{ color: \"white\", fontSize: \"40\", marginTop: \"10px\", marginLeft: \"10px\" }} /></h2></div></header>\n      <Identification />\n      {!isAdmin\n        ? <Exchanger openHistory={openHistory} setOpenHistory={setOpenHistory} openCheckout={openCheckout} setOpenCheckout={setOpenCheckout} />\n        : <Administrator openHistory={openHistory} setOpenHistory={setOpenHistory} />\n      }\n      <Checkout openCheckout={openCheckout} setOpenCheckout={setOpenCheckout} />\n      <History openHistory={openHistory} setOpenHistory={setOpenHistory} />\n      <footer> <h4>Currency exchanger project of Yaroslav Kobernyk-Berezovsky , BSU Faculty of Radiphysics and Computer Technology, 2020<span>&#174;</span></h4></footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// a and b are javascript Date objects\r\nfunction dateDiffInDays(a, b) {\r\n    // Discard the time and time-zone information.\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n\r\n    return Math.floor((utc2 - utc1) / (1000 * 60 * 60 * 24));\r\n}\r\n\r\nfunction getToday() {\r\n    var d = new Date();\r\n    var curr_date = d.getDate();\r\n    var curr_month = d.getMonth() + 1;\r\n    var curr_year = d.getFullYear();\r\n    return (curr_year + \"-\" + curr_month + \"-\" + curr_date);\r\n}\r\n\r\n\r\nexport { dateDiffInDays, getToday };","import { dateDiffInDays } from './helper'\r\nconst FETCH = \"FETCH\", FETCH_CHANGE = \"FETCH_CHANGE\", FETCH_MORE = \"FETCH_MORE\",\r\n    SUCCESS = \"SUCCESS\", FAILURE = \"FAILURE\", ADD_DATA = \"ADD_DATA\",\r\n    INIT = \"INIT\", FETCH_INIT = \"FETCH_INIT\", CHANGE_MAX = \"CHANGE_MAX\", FETCH_CHANGE_MAX = \"FETCH_CHANGE_MAX\",\r\n    CHANGE_DATE = \"CHANGE_DATE\", FETCH_CHANGE_DATE = \"FETCH_CHANGE_DATE\",\r\n    CHANGE_RATES=\"CHANGE_RATES\", FETCH_CHANGE_RATES=\"FETCH_CHANGE_RATES\";\r\n    \r\nconst myMiddleware = store => next => action => {\r\n    try {\r\n        if (action.type == FETCH) {\r\n\r\n            fetch(`https://api.exchangeratesapi.io/latest?base=${action.query}`).then(response => response.json()).then(data => {\r\n                return data\r\n\r\n            })\r\n                .then((el) => {\r\n                    store.dispatch({\r\n                        type: SUCCESS, rates: el.rates, sellCurrency: el.base,\r\n                    })\r\n                }\r\n                )\r\n        }\r\n    }\r\n    catch (err) {\r\n        store.dispatch({ type: FAILURE })\r\n    }\r\n    next(action);\r\n}\r\nconst myMiddlewareTrade = store => next => action => {\r\n\r\n    if (action.type == FETCH_MORE) {\r\n        store.dispatch({\r\n            type: ADD_DATA,\r\n            history: [{\r\n                \r\n                sellingCurrency: action.sellingCurrency,\r\n                buyingCurrency: action.buyingCurrency,\r\n                value: action.value,\r\n                buyingValue: action.buyingValue,\r\n                currency: action.currency,\r\n                // name: action.name,\r\n                // surname: action.surname,\r\n                // patronymic: action.patronymic\r\n            }]\r\n        })\r\n        let historyArray = JSON.parse(localStorage.getItem(\"history\"));\r\n        if (!historyArray) historyArray = [];\r\n        const historyIndex = historyArray.findIndex((elem) => { return (elem.name === action.name && elem.surname === action.surname && elem.patronymic === action.patronymic) })\r\n        if (historyIndex === -1) {\r\n            historyArray.push({\r\n                name: action.name,\r\n                surname: action.surname,\r\n                patronymic: action.patronymic,\r\n                history: [{\r\n                    date: store.getState().today,\r\n                    sellingCurrency: action.sellingCurrency,\r\n                    buyingCurrency: action.buyingCurrency,\r\n                    value: action.value,\r\n                    buyingValue: action.buyingValue,\r\n                    currency: action.currency,\r\n                }]\r\n            });\r\n        }\r\n        else historyArray[historyIndex].history.push({\r\n            date: store.getState().today,\r\n            sellingCurrency: action.sellingCurrency,\r\n            buyingCurrency: action.buyingCurrency,\r\n            value: action.value,\r\n            buyingValue: action.buyingValue,\r\n            currency: action.currency,\r\n        });\r\n        localStorage.setItem(\"history\", JSON.stringify(historyArray));\r\n    }\r\n\r\n    next(action);\r\n}\r\nconst myMiddlewareInit = store => next => action => {\r\n    if (action.type == FETCH_INIT) {\r\n        let history;\r\n        let value = 0;\r\n        let isAdmin = false;\r\n        const maxValue = (JSON.parse(localStorage.getItem(\"maxValue\")) == undefined || JSON.parse(localStorage.getItem(\"maxValue\")) == null) ? 1000 :\r\n            JSON.parse(localStorage.getItem(\"maxValue\"));\r\n        let historyArray = JSON.parse(localStorage.getItem(\"history\"));\r\n        if (!historyArray) historyArray = [];\r\n        const historyIndex = historyArray.findIndex((elem) => { return (elem.name === action.name && elem.surname === action.surname && elem.patronymic === action.patronymic) })\r\n        if (historyIndex === -1) {\r\n            history = [];\r\n        }\r\n        else history = historyArray[historyIndex].history\r\n        for (var i = history.length - 1; i >= 0; i--) {\r\n            if (dateDiffInDays(new Date(history[i].date), new Date(store.getState().today)) <= 1) {\r\n                value += Number.parseInt(history[i].value);\r\n            }\r\n        }\r\n\r\n        if (action.name.trim().toLowerCase() === 'admin'\r\n            && action.surname.trim().toLowerCase() === 'admin'\r\n            && action.patronymic.trim().toLowerCase() === 'admin') {\r\n            isAdmin = true;\r\n        }\r\n\r\n        store.dispatch({\r\n            type: INIT,\r\n            name: action.name,\r\n            surname: action.surname,\r\n            patronymic: action.patronymic,\r\n            maxValue: maxValue - value,\r\n            isAdmin: isAdmin\r\n        })\r\n        console.log(store.getState());\r\n\r\n    }\r\n\r\n    next(action);\r\n}\r\nconst myMiddlewareChangeMax = store => next => action => {\r\n    if (action.type == CHANGE_MAX) {\r\n        localStorage.setItem(\"maxValue\", JSON.stringify(action.maxValue))\r\n        store.dispatch({\r\n            type: FETCH_CHANGE_MAX,\r\n            maxValue: action.maxValue\r\n        })\r\n        console.log(store.getState());\r\n    }\r\n\r\n    next(action);\r\n}\r\nconst myMiddlewareChangeDate = store => next => action => {\r\n    console.log(action.today);\r\n    if (action.type == CHANGE_DATE) {\r\n        console.log(action.today);\r\n        sessionStorage.setItem(\"today\", JSON.stringify(action.today))\r\n        store.dispatch({\r\n            type: FETCH_CHANGE_DATE,\r\n            maxValue: action.today\r\n        })\r\n        console.log(store.getState());\r\n    }\r\n\r\n    next(action);\r\n}\r\nconst myMiddlewareChangeRates = store => next => action => {\r\n    console.log(action.today);\r\n    if (action.type == CHANGE_RATES) {\r\n        localStorage.setItem(\"systemRates\", JSON.stringify(action.systemRates))\r\n        store.dispatch({\r\n            type: FETCH_CHANGE_RATES,\r\n            systemRates: action.systemRates\r\n        })\r\n        console.log(store.getState());\r\n    }\r\n\r\n    next(action);\r\n}\r\n\r\nexport {myMiddleware, myMiddlewareTrade, myMiddlewareInit, myMiddlewareChangeMax, myMiddlewareChangeDate, myMiddlewareChangeRates};","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport { myMiddleware, myMiddlewareTrade, myMiddlewareInit, myMiddlewareChangeMax, myMiddlewareChangeDate,myMiddlewareChangeRates } from './middlewares'\r\nimport {  getToday } from './helper'\r\nconst FETCH = \"FETCH\", FETCH_CHANGE = \"FETCH_CHANGE\", FETCH_MORE = \"FETCH_MORE\",\r\n    SUCCESS = \"SUCCESS\", FAILURE = \"FAILURE\", ADD_DATA = \"ADD_DATA\",\r\n    INIT = \"INIT\", FETCH_INIT = \"FETCH_INIT\", CHANGE_MAX = \"CHANGE_MAX\", FETCH_CHANGE_MAX = \"FETCH_CHANGE_MAX\",\r\n    CHANGE_DATE = \"CHANGE_DATE\", FETCH_CHANGE_DATE = \"FETCH_CHANGE_DATE\",\r\n    CHANGE_RATES=\"CHANGE_RATES\", FETCH_CHANGE_RATES=\"FETCH_CHANGE_RATES\";\r\nconst maxValueStorage = JSON.parse(localStorage.getItem(\"maxValue\")) ? JSON.parse(localStorage.getItem(\"maxValue\")) : 1000;\r\nconst todayStorage = JSON.parse(sessionStorage.getItem(\"today\")) ? JSON.parse(sessionStorage.getItem(\"today\")) : getToday();\r\nlet systemRatesObject = {\r\n    AUD: 1.2345645648,\r\n    BGN: 1.1954037039,\r\n    BRL: 3.8528818532,\r\n    CAD: 0.9591100788,\r\n    CHF: 0.6620011002,\r\n    CNY: 4.8632112952,\r\n    CZK: 16.1481572031,\r\n    DKK: 4.5497830206,\r\n    EUR: 0.6112095838,\r\n    GBP: 0.5522767557,\r\n    HKD: 5.7568608276,\r\n    HRK: 4.6127987287,\r\n    HUF: 218.5868834423,\r\n    IDR: 10501.5035755761,\r\n    ILS: 2.4289468859,\r\n    INR: 54.8310005501,\r\n    ISK: 93.5150663162,\r\n    JPY: 77.3119002506,\r\n    KRW: 810.4088992115,\r\n    MXN: 14.7536214168,\r\n    MYR: 3.0226147546,\r\n    NOK: 6.5442210134,\r\n    NZD: 1.0497524601,\r\n    PHP: 35.632907524,\r\n    PLN: 2.7341238311,\r\n    RON: 2.9784243017,\r\n    RUB: 55.5247845486,\r\n    SEK: 6.2969867368,\r\n    SGD: 0.9918709125,\r\n    THB: 22.4069433409,\r\n    TRY: 5.8077745859,\r\n    USD: 0.7426807652,\r\n    ZAR: 11.3364097549\r\n};\r\nif (JSON.parse(localStorage.getItem(\"systemRates\"))) {\r\n    Object.assign(systemRatesObject, JSON.parse(localStorage.getItem(\"systemRates\")));\r\n}\r\n\r\nconst videoState = {\r\n    today: todayStorage, // yyyy-mm-dd\r\n    history: [],\r\n    sellCurrency: \"\",\r\n    buyCurrency: \"\",\r\n    rates: [],\r\n    systemRates: systemRatesObject,\r\n    maxValue: maxValueStorage,\r\n    name: \"\",\r\n    surname: \"\",\r\n    patronymic: \"\",\r\n    isAdmin: false,\r\n};\r\n\r\nfunction videoReducer(state = videoState, action) {\r\n    switch (action.type) {\r\n        case SUCCESS:\r\n\r\n            return {\r\n                ...state,\r\n                rates: action.rates,\r\n                sellCurrency: action.sellCurrency,\r\n                buyCurrency: action.buyCurrency,\r\n            };\r\n        case FAILURE:\r\n            alert(\"ERROR IN FETCHING\");\r\n            return {\r\n                ...state,\r\n            };\r\n        case INIT:\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                surname: action.surname,\r\n                patronymic: action.patronymic,\r\n                maxValue: action.maxValue,\r\n                isAdmin: action.isAdmin,\r\n            };\r\n        case ADD_DATA:\r\n            return {\r\n                ...state,\r\n                history: [...state.history, ...action.history],\r\n            };\r\n        case FETCH_CHANGE_MAX:\r\n            return {\r\n                ...state,\r\n                maxValue: action.maxValue,\r\n            };\r\n        case FETCH_CHANGE_DATE:\r\n            return {\r\n                ...state,\r\n                today: action.today,\r\n            };\r\n            case FETCH_CHANGE_RATES:\r\n            return {\r\n                ...state,\r\n                systemRates: action.systemRates,\r\n            };\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(videoReducer, composeEnhancer(\r\n    applyMiddleware(myMiddleware, myMiddlewareTrade, myMiddlewareInit, myMiddlewareChangeMax, myMiddlewareChangeDate, myMiddlewareChangeRates)\r\n))\r\n\r\n\r\n//key1: xC34KddrtJCs85Jhzt6flpuqjm8i0saenuO2 \r\n//https://currencyapi.net/api/v1/currencies?key=xC34KddrtJCs85Jhzt6flpuqjm8i0saenuO2&base=EUR\r\n\r\n\r\n//ley2:e70ac732c3ed679c762c47a68a085a41\r\n//http://data.fixer.io/api/\r\n\r\n//https://open.exchangerate-api.com/v6/latest\r\n\r\n//https://api.ratesapi.io/api/latest?base=BYR\r\n\r\n//https://free.currconv.com/api/v7/convert?q=USD_PHP&compact=ultra&apiKey=dda8dc11b03474b5734f\r\n//key: dda8dc11b03474b5734f\r\n\r\n//https://www.nbrb.by/api/exrates/rates?periodicity=0","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './store'\nimport { Provider } from 'react-redux'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}